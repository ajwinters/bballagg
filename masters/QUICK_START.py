"""
NBA Master Tables - Quick Start Guide

Ready-to-run system for automated NBA data collection into PostgreSQL RDS.
All components tested and verified working.
"""

print("""
üèÄ NBA MASTER TABLES DATABASE SYSTEM
====================================

‚úÖ SYSTEM STATUS: READY FOR PRODUCTION

üìä DATABASE STRUCTURE:
‚Ä¢ 9 Master Tables (3 leagues √ó 3 data types)
‚Ä¢ NBA, WNBA, G-League data
‚Ä¢ Games (daily), Players (weekly), Teams (yearly)

üîÑ AUTOMATED SCHEDULES:
‚Ä¢ Games: Daily at 6:00 AM
‚Ä¢ Players: Weekly (Sunday) at 2:00 AM  
‚Ä¢ Teams: Yearly (Oct 1) at 1:00 AM

üöÄ QUICK START:
""")

print("1. TEST THE SYSTEM:")
print("   cd masters")
print("   python test_system.py")
print()

print("2. INITIAL BACKFILL (Test Mode):")
print("   python database_manager.py")
print("   # Choose option 1: Run full backfill (test mode)")
print()

print("3. PRODUCTION BACKFILL:")
print("   python database_manager.py") 
print("   # Choose option 2: Run full backfill (production mode)")
print("   # ‚ö†Ô∏è Takes several hours due to API rate limits")
print()

print("4. SET UP AUTOMATION:")
print("   python scheduler.py --setup-windows")
print("   # Follow the displayed Windows Task Scheduler commands")
print()

print("5. MONITOR OPERATIONS:")
print("   python scheduler.py --status  # Check schedules")
print("   python database_manager.py   # Manual operations")
print("   # Check logs in: masters/logs/")
print()

print("üìÅ KEY FILES:")
files = [
    ("database_manager.py", "Core database operations & manual runs"),
    ("scheduler.py", "Automated scheduling system"),
    ("test_system.py", "System verification & testing"),
    ("scheduler_config.json", "Configuration settings"),
    ("masters_README.md", "Complete documentation"),
    ("logs/", "Execution logs & monitoring")
]

for filename, description in files:
    print(f"   {filename:<20} - {description}")

print()
print("‚öôÔ∏è CONFIGURATION:")
print("   Edit scheduler_config.json to customize:")
print("   ‚Ä¢ Update schedules and frequencies")
print("   ‚Ä¢ Database connection settings") 
print("   ‚Ä¢ Collection parameters")
print("   ‚Ä¢ Monitoring thresholds")
print()

print("üÜò TROUBLESHOOTING:")
print("   ‚Ä¢ Database issues: Check RDS connectivity & credentials")
print("   ‚Ä¢ API issues: Verify nba_api package & rate limits")
print("   ‚Ä¢ Schedule issues: Check Windows Task Scheduler")
print("   ‚Ä¢ Data issues: Review logs in masters/logs/")
print()

print("üéØ PRODUCTION CHECKLIST:")
checklist = [
    "Run test_system.py (all tests pass)",
    "Test database connectivity", 
    "Run test mode backfill successfully",
    "Verify master tables created",
    "Set up Windows scheduled tasks",
    "Monitor first few automated runs",
    "Configure alerts/notifications"
]

for i, item in enumerate(checklist, 1):
    print(f"   {i}. {item}")

print()
print("üìà EXPECTED RESULTS:")
print("   ‚Ä¢ NBA: ~2,400 games per season")
print("   ‚Ä¢ WNBA: ~480 games per season") 
print("   ‚Ä¢ G-League: ~1,000 games per season")
print("   ‚Ä¢ Players: 400-500 per league per season")
print("   ‚Ä¢ Teams: 30 NBA, 12 WNBA, 30+ G-League")
print()

print("‚ö° SYSTEM TESTED & VERIFIED:")
print("   ‚úÖ NBA API connectivity (2,460 games)")
print("   ‚úÖ All league configurations working")
print("   ‚úÖ Data processing functions")
print("   ‚úÖ Season generation logic") 
print("   ‚úÖ Configuration loading")
print("   ‚úÖ Scheduler functionality")
print()

print("üéâ READY FOR PRODUCTION!")
print("   Run: python database_manager.py")
print("   Choose option 1 for test mode, then option 2 for full backfill")
